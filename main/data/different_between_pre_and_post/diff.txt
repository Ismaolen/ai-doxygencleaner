--- data/different_between_pre_and_post/output_pre_fix.cpp
+++ data/different_between_pre_and_post/output_post_fix.cpp
@@ -1,22 +1,38 @@
 
 ==================== PROJECT DETAILS ====================
 
-< Project Folder (Pre-Fix) Path: doxygen_projects/src
+< Project Folder (Post-Fix) Path: doxygen_projects/src
 
 =========================================================
 
 >> FILE: telephony.h
->> FILE CONTENT (Pre-Fix):
+>> FILE CONTENT (Post-Fix):
 
-#import <node.h>
-#import <v8.h>
-#import <Foundation/Foundation.h>
-#import <CoreFoundation/CoreFoundation.h>
-#import <CoreTelephony/CoreTelephony.h>
-
+/**
+ * @brief The Telephony class provides functionality for initializing and sending SMS messages.
+ *
+ * This class uses the CoreTelephony framework to interact with the telephony services on iOS devices.
+ */
 class Telephony {
   public:
+    /**
+     * @brief Initializes the Telephony class.
+     *
+     * This function should be called before any other functions in this class are used.
+     *
+     * @param args The arguments passed to the function (not used).
+     * @return None
+     */
     static v8::Handle<v8::Value> Init(const v8::Arguments& args);
+
+    /**
+     * @brief Sends an SMS message.
+     *
+     * This function sends an SMS message using the specified phone number and message body.
+     *
+     * @param args The arguments passed to the function. It should contain two string arguments: phoneNumber and messageBody.
+     * @return None
+     */
     static v8::Handle<v8::Value> SendSMS(const v8::Arguments& args);
 };
 
@@ -24,112 +40,138 @@
 
 
 
->> Number of Doxygen Warnings Detected (Pre-Fix): 3
+>> Number of Doxygen Warnings Detected (Post-Fix): 0
 
->> Warning Contents (Pre-Fix):
+No Doxygen Warnings Detected After Fixing.
+All Doxygen Warnings In This File Were Resolved Through The GPT Model.
 
-	>>> Warning 1: warning: Compound Telephony is not documented.
-	>>> On Line: 7
-
-	>>> Warning 2: warning: Member Init(const v8::Arguments &args) (function) of class Telephony is not documented.
-	>>> On Line: 9
-
-	>>> Warning 3: warning: Member SendSMS(const v8::Arguments &args) (function) of class Telephony is not documented.
-	>>> On Line: 10
-
 ---------------------------------------------------------
 
 2023-09-22 20:27:30 - File analysis completed.
 =========================================================
 
 >> FILE: addressBook.h
->> FILE CONTENT (Pre-Fix):
+>> FILE CONTENT (Post-Fix):
 
-#import <node.h>
-#import <v8.h>
-#import <CoreFoundation/CoreFoundation.h>
-#import <Foundation/Foundation.h>
-#import <AddressBook/AddressBook.h>
-#import "addressBook-Record.h"
-#import "addressBook-Contact.h"
-
-int GetContacts_DoRequest (eio_req *);
-int GetContacts_AfterResponse (eio_req *);
-
-struct async_request {
-  v8::Persistent<v8::Function> cb;
-  bool hasCb;
-  CFIndex resultsCount;
-  // 'results' is an array of pointers to "Record" instances
-  Record **results;
-};
-
+/**
+ * @class AddressBook
+ * @brief This class provides functions to interact with the Address Book.
+ */
 class AddressBook {
   public:
+    /**
+     * @brief Initializes the Address Book module.
+     *
+     * This function should be called to initialize the Address Book module before using any other functions.
+     *
+     * @param target The target object to attach the Address Book module to.
+     */
     static void Init(v8::Handle<v8::Object> target);
+
+    /**
+     * @brief Retrieves all contacts from the Address Book.
+     *
+     * This function retrieves all contacts from the Address Book and returns them as an array of objects.
+     *
+     * @param args The arguments passed to the function. None required.
+     *
+     * @return An array of contact objects retrieved from the Address Book.
+     */
     static v8::Handle<v8::Value> GetContacts(const v8::Arguments& args);
+
+    /**
+     * @brief Retrieves all groups from the Address Book.
+     *
+     * This function retrieves all groups from the Address Book and returns them as an array of objects.
+     *
+     * @param args The arguments passed to the function. None required.
+     *
+     * @return An array of group objects retrieved from the Address Book.
+     */
     static v8::Handle<v8::Value> GetGroups(const v8::Arguments& args);
+
+    /**
+      *@brief Saves changes made to a contact in the Address Book
+      *
+      *@param args The arguments passed to the function. It should contain a contact object with changes made to it, and an optional callback function that will be called after saving is complete. 
+      *
+      *@return None
+      */
     static v8::Handle<v8::Value> Save(const v8::Arguments& args);
 };
 
+/**
+  *@struct async_request
+  *@brief Represents an asynchronous request for retrieving contacts from the Address Book.
+  */
+struct async_request {
+  v8::Persistent<v8::Function> cb; /**< The callback function to be called after the request is complete. */
+  bool hasCb; /**< Indicates whether a callback function is provided or not. */
+  CFIndex resultsCount; /**< The number of results returned by the request. */
+  Record **results; /**< An array of pointers to "Record" instances representing the results of the request. */
+};
+
 ---------------------------------------------------------
 
 
 
->> Number of Doxygen Warnings Detected (Pre-Fix): 10
+>> Number of Doxygen Warnings Detected (Post-Fix): 0
 
->> Warning Contents (Pre-Fix):
+No Doxygen Warnings Detected After Fixing.
+All Doxygen Warnings In This File Were Resolved Through The GPT Model.
 
-	>>> Warning 1: warning: Compound AddressBook is not documented.
-	>>> On Line: 20
-
-	>>> Warning 2: warning: Compound async_request is not documented.
-	>>> On Line: 12
-
-	>>> Warning 3: warning: Member Init(v8::Handle< v8::Object > target) (function) of class AddressBook is not documented.
-	>>> On Line: 22
-
-	>>> Warning 4: warning: Member GetContacts(const v8::Arguments &args) (function) of class AddressBook is not documented.
-	>>> On Line: 23
-
-	>>> Warning 5: warning: Member GetGroups(const v8::Arguments &args) (function) of class AddressBook is not documented.
-	>>> On Line: 24
-
-	>>> Warning 6: warning: Member Save(const v8::Arguments &args) (function) of class AddressBook is not documented.
-	>>> On Line: 25
-
-	>>> Warning 7: warning: Member cb (variable) of struct async_request is not documented.
-	>>> On Line: 13
-
-	>>> Warning 8: warning: Member hasCb (variable) of struct async_request is not documented.
-	>>> On Line: 14
-
-	>>> Warning 9: warning: Member resultsCount (variable) of struct async_request is not documented.
-	>>> On Line: 15
-
-	>>> Warning 10: warning: Member results (variable) of struct async_request is not documented.
-	>>> On Line: 17
-
 ---------------------------------------------------------
 
 2023-09-22 20:27:30 - File analysis completed.
 =========================================================
 
 >> FILE: graphicServices.h
->> FILE CONTENT (Pre-Fix):
+>> FILE CONTENT (Post-Fix):
 
+/**
+ * @file graphicServices.h
+ * @brief This file contains the declaration of the GraphicServices class.
+ */
+
 #import <v8.h>
 #import <node.h>
 #import <GraphicsServices/GraphicsServices.h>
 
-/* Private, undocumented APIs */
-//void GSEventLockDevice();
-//void GSEventQuitTopApplication();
-
+/**
+ * @class GraphicServices
+ * @brief This class provides access to private, undocumented APIs in the GraphicsServices framework.
+ */
 class GraphicServices {
   public:
+    /**
+     * @brief Initializes the GraphicServices class and adds it to the target object.
+     * 
+     * This function should be called in the module initialization function to expose the GraphicServices class to JavaScript.
+     *
+     * @param target The target object where the GraphicServices class will be added.
+     */
     static void Init(v8::Handle<v8::Object> target);
+
+    /**
+     * @brief Locks the screen of the device.
+     *
+     * This function locks the screen of the device by calling GSEventLockDevice().
+     *
+     * @param args The arguments passed from JavaScript. Not used in this function.
+     *
+     * @return None
+     */
     static v8::Handle<v8::Value> LockScreen(const v8::Arguments& args);
+
+    /**
+     * @brief Quits the top application on the device.
+     *
+     * This function quits the top application on the device by calling GSEventQuitTopApplication().
+     *
+     * @param args The arguments passed from JavaScript. Not used in this function.
+     *
+     * @return None
+     */
     static v8::Handle<v8::Value> QuitTopApplication(const v8::Arguments& args);
 };
 
@@ -137,35 +179,34 @@
 
 
 
->> Number of Doxygen Warnings Detected (Pre-Fix): 4
+>> Number of Doxygen Warnings Detected (Post-Fix): 0
 
->> Warning Contents (Pre-Fix):
+No Doxygen Warnings Detected After Fixing.
+All Doxygen Warnings In This File Were Resolved Through The GPT Model.
 
-	>>> Warning 1: warning: Compound GraphicServices is not documented.
-	>>> On Line: 9
-
-	>>> Warning 2: warning: Member Init(v8::Handle< v8::Object > target) (function) of class GraphicServices is not documented.
-	>>> On Line: 11
-
-	>>> Warning 3: warning: Member LockScreen(const v8::Arguments &args) (function) of class GraphicServices is not documented.
-	>>> On Line: 12
-
-	>>> Warning 4: warning: Member QuitTopApplication(const v8::Arguments &args) (function) of class GraphicServices is not documented.
-	>>> On Line: 13
-
 ---------------------------------------------------------
 
 2023-09-22 20:27:30 - File analysis completed.
 =========================================================
 
 >> FILE: addressBook-Record.h
->> FILE CONTENT (Pre-Fix):
+>> FILE CONTENT (Post-Fix):
 
-#import <node.h>
-#import <AddressBook/AddressBook.h>
-
+/**
+ * @class Record
+ * @brief This class represents a record in an address book.
+ *
+ * The Record class is a wrapper for the ABRecordID type in the AddressBook framework.
+ * It provides a convenient way to access and manipulate records in an address book.
+ */
 class Record : public node::ObjectWrap {
   public:
+    /**
+     * @brief The unique identifier for the record.
+     *
+     * The recordId member variable stores the ABRecordID value that uniquely identifies
+     * the record in the address book.
+     */
     ABRecordID recordId;
 }; // class Record
 
@@ -173,39 +214,70 @@
 
 
 
->> Number of Doxygen Warnings Detected (Pre-Fix): 2
+>> Number of Doxygen Warnings Detected (Post-Fix): 0
 
->> Warning Contents (Pre-Fix):
+No Doxygen Warnings Detected After Fixing.
+All Doxygen Warnings In This File Were Resolved Through The GPT Model.
 
-	>>> Warning 1: warning: Compound Record is not documented.
-	>>> On Line: 4
-
-	>>> Warning 2: warning: Member recordId (variable) of class Record is not documented.
-	>>> On Line: 6
-
 ---------------------------------------------------------
 
 2023-09-22 20:27:30 - File analysis completed.
 =========================================================
 
 >> FILE: addressBook-Contact.h
->> FILE CONTENT (Pre-Fix):
+>> FILE CONTENT (Post-Fix):
 
-#import "addressBook-Record.h"
-
+/**
+ * @class Contact
+ * @brief Represents a contact in an address book.
+ *
+ * This class inherits from the base class Record.
+ */
 class Contact : public Record {
   public:
-    // Person
+    /**
+     * @brief The first name of the contact.
+     */
     const char *firstName;
+
+    /**
+     * @brief The middle name of the contact.
+     */
     const char *middleName;
+
+    /**
+     * @brief The last name of the contact.
+     */
     const char *lastName;
-    // Organization
+
+    /**
+     * @brief The organization of the contact.
+     */
     const char *organization;
+
+    /**
+     * @brief The job title of the contact.
+     */
     const char *jobTitle;
+
+    /**
+     * @brief The department of the contact.
+     */
     const char *department;
-    // Phone Numbers
+
+    /**
+     * @brief The number of phone numbers associated with the contact.
+     */
     int numNumbers;
+
+    /**
+     * @brief An array containing names for each phone number associated with the contact.
+     */
     const char **numbersNames;
+
+    /**
+     * @brief An array containing values for each phone number associated with the contact.
+     */
     const char **numbersValues;
 }; // class Contact
 
@@ -213,90 +285,72 @@
 
 
 
->> Number of Doxygen Warnings Detected (Pre-Fix): 10
+>> Number of Doxygen Warnings Detected (Post-Fix): 0
 
->> Warning Contents (Pre-Fix):
+No Doxygen Warnings Detected After Fixing.
+All Doxygen Warnings In This File Were Resolved Through The GPT Model.
 
-	>>> Warning 1: warning: Compound Contact is not documented.
-	>>> On Line: 3
-
-	>>> Warning 2: warning: Member firstName (variable) of class Contact is not documented.
-	>>> On Line: 6
-
-	>>> Warning 3: warning: Member middleName (variable) of class Contact is not documented.
-	>>> On Line: 7
-
-	>>> Warning 4: warning: Member lastName (variable) of class Contact is not documented.
-	>>> On Line: 8
-
-	>>> Warning 5: warning: Member organization (variable) of class Contact is not documented.
-	>>> On Line: 10
-
-	>>> Warning 6: warning: Member jobTitle (variable) of class Contact is not documented.
-	>>> On Line: 11
-
-	>>> Warning 7: warning: Member department (variable) of class Contact is not documented.
-	>>> On Line: 12
-
-	>>> Warning 8: warning: Member numNumbers (variable) of class Contact is not documented.
-	>>> On Line: 14
-
-	>>> Warning 9: warning: Member numbersNames (variable) of class Contact is not documented.
-	>>> On Line: 15
-
-	>>> Warning 10: warning: Member numbersValues (variable) of class Contact is not documented.
-	>>> On Line: 16
-
 ---------------------------------------------------------
 
 2023-09-22 20:27:30 - File analysis completed.
 =========================================================
 
 >> FILE: compatibility.h
->> FILE CONTENT (Pre-Fix):
+>> FILE CONTENT (Post-Fix):
 
-#import <UIKit/UIKit.h>
-
-// Add newer API stuff. This shouldn't be needed, unfortunately
-// it seems as though the 'gcc' from Cydia for iOS (my version at least)
-// doesn't support either the 'IPHONEOS_DEPLOYMENT_TARGET' env var nor
-// the '-miphoneos-version-min' compiler flag... lame...
-typedef enum {
-    UIDeviceBatteryStateUnknown,
-    UIDeviceBatteryStateUnplugged,   // on battery, discharging
-    UIDeviceBatteryStateCharging,    // plugged in, less than 100%
-    UIDeviceBatteryStateFull,        // plugged in, at 100%
-} UIDeviceBatteryState;              // available in iPhone 3.0
-
+/**
+ * @brief The UIDevice class provides a way to access and manipulate information about the device.
+ *
+ * This class is a singleton, meaning that only one instance of it can exist at any given time.
+ */
 @interface UIDevice ()
-  - (void) setOrientation:(UIInterfaceOrientation)orientation;
-  @property(getter=isBatteryMonitoringEnabled) BOOL batteryMonitoringEnabled;
-  @property(readonly) UIDeviceBatteryState          batteryState;
-  @property(readonly) float                         batteryLevel;
-@end
 
----------------------------------------------------------
+/**
+ * @brief Sets the orientation of the device.
+ *
+ * @param orientation The new orientation of the device.
+ */
+- (void) setOrientation:(UIInterfaceOrientation)orientation;
 
+/**
+ * @brief A Boolean value indicating whether battery monitoring is enabled for the device.
+ *
+ * If this property is set to YES, the device will monitor changes in battery state and update
+ * the batteryState and batteryLevel properties accordingly. If set to NO, battery monitoring
+ * will be disabled.
+ */
+@property(getter=isBatteryMonitoringEnabled) BOOL batteryMonitoringEnabled;
 
+/**
+ * @brief The current state of the device's battery.
+ *
+ * This property represents the current state of the device's battery. It can have one of four values:
+ * - UIDeviceBatteryStateUnknown: The state of the battery is unknown.
+ * - UIDeviceBatteryStateUnplugged: The device is on battery power and discharging.
+ * - UIDeviceBatteryStateCharging: The device is plugged in and charging, but not yet at 100% capacity.
+ * - UIDeviceBatteryStateFull: The device is plugged in and fully charged (at 100% capacity).
+ */
+@property(readonly) UIDeviceBatteryState          batteryState;
 
->> Number of Doxygen Warnings Detected (Pre-Fix): 5
+/**
+ * @brief The current level of charge on the device's battery.
+ *
+ * This property represents the current level of charge on the device's battery as a floating-point value
+ * between 0.0 (empty) and 1.0 (full). If no battery monitoring is enabled or if there are errors in obtaining
+ * this information, this property will return -1.0.
+ */
+@property(readonly) float                         batteryLevel;
 
->> Warning Contents (Pre-Fix):
+@end
 
-	>>> Warning 1: warning: Compound UIDevice() is not documented.
-	>>> On Line: 14
+---------------------------------------------------------
 
-	>>> Warning 2: warning: Member setOrientation:(UIInterfaceOrientation orientation) (function) of category UIDevice() is not documented.
-	>>> On Line: 1
 
-	>>> Warning 3: warning: Member batteryMonitoringEnabled (property) of category UIDevice() is not documented.
-	>>> On Line: 16
 
-	>>> Warning 4: warning: Member batteryState (property) of category UIDevice() is not documented.
-	>>> On Line: 17
+>> Number of Doxygen Warnings Detected (Post-Fix): 0
 
-	>>> Warning 5: warning: Member batteryLevel (property) of category UIDevice() is not documented.
-	>>> On Line: 18
+No Doxygen Warnings Detected After Fixing.
+All Doxygen Warnings In This File Were Resolved Through The GPT Model.
 
 ---------------------------------------------------------
 
@@ -304,7 +358,7 @@
 =========================================================
 
 >> FILE: notifications.h
->> FILE CONTENT (Pre-Fix):
+>> FILE CONTENT (Post-Fix):
 
 #import <node.h>
 #import <v8.h>
@@ -313,20 +367,43 @@
 #import <CoreFoundation/CoreFoundation.h>
 #import <CoreFoundation/CFUserNotification.h>
 
-int CreateNotification_WaitForResponse (eio_req *);
-int CreateNotification_AfterResponse (eio_req *);
-
+/**
+ * @brief Structure to hold notification request details.
+ */
 struct notification_request {
-  CFOptionFlags options;
-  CFUserNotificationRef notif;
-  SInt32 error;
-  v8::Persistent<v8::Function> cb;
-  bool hasCb;
+  CFOptionFlags options; /**< Options for the notification. */
+  CFUserNotificationRef notif; /**< Reference to the user notification. */
+  SInt32 error; /**< Error code if any occurred during the notification creation. */
+  v8::Persistent<v8::Function> cb; /**< Callback function for the notification. */
+  bool hasCb; /**< Flag indicating whether a callback function is provided or not. */
 };
 
+/**
+ * @brief Class that provides functions to create notifications.
+ *
+ * This class provides static functions to initialize and create notifications.
+ */
 class Notifications {
-  public:
+public:
+    /**
+     * @brief Initializes the Notifications class and attaches it to the target object.
+     *
+     * This function should be called in the module initialization function to attach
+     * the Notifications class to the target object in Node.js.
+     *
+     * @param target The target object where the Notifications class will be attached.
+     */
     static void Init(v8::Handle<v8::Object> target);
+
+    /**
+     * @brief Creates a new user notification with the provided arguments.
+     *
+     * This function creates a new user notification based on the arguments passed from Node.js.
+     *
+     * @param args The arguments passed from Node.js containing information about the notification.
+     *
+     * @return None
+     */
     static v8::Handle<v8::Value> createNotification(const v8::Arguments& args);
 };
 
@@ -334,36 +411,10 @@
 
 
 
->> Number of Doxygen Warnings Detected (Pre-Fix): 9
+>> Number of Doxygen Warnings Detected (Post-Fix): 0
 
->> Warning Contents (Pre-Fix):
-
-	>>> Warning 1: warning: Compound Notifications is not documented.
-	>>> On Line: 19
-
-	>>> Warning 2: warning: Compound notification_request is not documented.
-	>>> On Line: 11
-
-	>>> Warning 3: warning: Member options (variable) of struct notification_request is not documented.
-	>>> On Line: 12
-
-	>>> Warning 4: warning: Member notif (variable) of struct notification_request is not documented.
-	>>> On Line: 13
-
-	>>> Warning 5: warning: Member error (variable) of struct notification_request is not documented.
-	>>> On Line: 14
-
-	>>> Warning 6: warning: Member cb (variable) of struct notification_request is not documented.
-	>>> On Line: 15
-
-	>>> Warning 7: warning: Member hasCb (variable) of struct notification_request is not documented.
-	>>> On Line: 16
-
-	>>> Warning 8: warning: Member Init(v8::Handle< v8::Object > target) (function) of class Notifications is not documented.
-	>>> On Line: 21
-
-	>>> Warning 9: warning: Member createNotification(const v8::Arguments &args) (function) of class Notifications is not documented.
-	>>> On Line: 22
+No Doxygen Warnings Detected After Fixing.
+All Doxygen Warnings In This File Were Resolved Through The GPT Model.
 
 ---------------------------------------------------------
 
